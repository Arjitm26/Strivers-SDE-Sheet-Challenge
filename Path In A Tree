#include <bits/stdc++.h> 
/*   
    template <typename T = int>
	class TreeNode
	{
		public:
		T data;
		TreeNode<T> *left;
		TreeNode<T> *right;

		TreeNode(T data)
		{
			this->data = data;
			left = NULL;
			right = NULL;
		}

		~TreeNode()
		{
			if (left != NULL)
			{
		  		delete left;
			}
			if (right != NULL)
			{
			 	delete right;
			}
		}
	};
*/

bool solve(TreeNode<int>* root,int x,vector<int>& ans){

	if(root == NULL){
		return 0;
	}

	if(root->data == x){
		ans.push_back(x);
		return 1;
	}

	if(root->left){
		if(solve(root->left,x,ans)){
			ans.push_back(root->data);
			return true;
		}
	}
	if(root->right){
		if(solve(root->right,x,ans)){
			ans.push_back(root->data);
			return true;
		}
	}

	return 0;
}

vector<int> pathInATree(TreeNode<int> *root, int x)
{
    vector<int> ans;
	solve(root,x,ans);
	reverse(ans.begin(),ans.end());
	return ans;
}
