bool isValidParenthesis(string expression)
{
    stack<char> st;
    for(int i=0; i<expression.length(); i++){
        char ch = expression[i];

        if(st.empty()){
            st.push(ch);
        }
        else{
            if((st.top() == '(' && ch == ')') || (st.top() == '{' && ch == '}') || (st.top() == '[' && ch == ']')){
                st.pop();
            }
            else{
                st.push(ch);
            }
        }
    }

    return st.empty();
}
