#include <bits/stdc++.h> 
vector<int> kMaxSumCombination(vector<int> &a, vector<int> &b, int n, int k){
	
	vector<int> ans;
	sort(a.begin(),a.end(),greater<int>());
	sort(b.begin(),b.end(),greater<int>());
	priority_queue<pair<int,pair<int,int>>> pq;
	vector<vector<int>> vis(n, vector<int>(n, 0));
	pq.push({a[0]+b[0],{0,0}});
	vis[0][0] = 1;
	while(!pq.empty() && k--){
		int sum = pq.top().first;
		int i = pq.top().second.first;
		int j = pq.top().second.second;
		pq.pop();

		ans.push_back(sum);
		if(i+1 < n && vis[i+1][j] == 0){
                  pq.push({a[i + 1] + b[j], {i + 1, j}});
                  vis[i+1][j] = 1;
		}
		if(j+1 < n && vis[i][j+1] == 0){
                  pq.push({a[i] + b[j + 1], {i, j + 1}});
                  vis[i][j+1] = 1;
		}
	}

	return ans;
}
